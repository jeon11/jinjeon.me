<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data-visualization | Jin Jeon</title>
    <link>https://jinjeon.me/tags/data-visualization/</link>
      <atom:link href="https://jinjeon.me/tags/data-visualization/index.xml" rel="self" type="application/rss+xml" />
    <description>data-visualization</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2021 developed by Jin Jeon with HTML/CSS/Markdown and ☕️ </copyright><lastBuildDate>Sat, 01 May 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jinjeon.me/img/icon.png</url>
      <title>data-visualization</title>
      <link>https://jinjeon.me/tags/data-visualization/</link>
    </image>
    
    <item>
      <title>Sentiment Analysis, Textual Data Analysis, and Visualization Using Natural Language API</title>
      <link>https://jinjeon.me/post/textual-data-analysis/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <guid>https://jinjeon.me/post/textual-data-analysis/</guid>
      <description>

&lt;p&gt;&lt;body style=&#34;font-family:Arial; font-size: 12pt&#34;&gt;&lt;/p&gt;

&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#link1&#34;&gt;What is Google Cloud API?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link2&#34;&gt;Survey Data in User Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link3&#34;&gt;Natural Language API Features&lt;/a&gt;&lt;br&gt;
3.1 &lt;a href=&#34;#link3.1&#34;&gt;Entity Analysis&lt;/a&gt;&lt;br&gt;
3.2 &lt;a href=&#34;#link3.2&#34;&gt;Sentiment Analysis&lt;/a&gt;&lt;br&gt;
3.3 &lt;a href=&#34;#link3.3&#34;&gt;Entity Sentiment Analysis&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link4&#34;&gt;Loading in data using Google Sheets API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link5&#34;&gt;Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link6&#34;&gt;Data Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link7&#34;&gt;Research Question&lt;/a&gt;&lt;br&gt;
7.1 &lt;a href=&#34;#link7.1&#34;&gt;A. Health Rating by Gender&lt;/a&gt;&lt;br&gt;
7.2 &lt;a href=&#34;#link7.2&#34;&gt;B. Health Rating by Age Group&lt;/a&gt;&lt;br&gt;
7.3 &lt;a href=&#34;#link7.3&#34;&gt;C. T-test for Statistical Signifcance&lt;/a&gt;&lt;br&gt;
7.4 &lt;a href=&#34;#link7.4&#34;&gt;D. Health Rating by Age &amp;amp; Gender Group&lt;/a&gt;&lt;br&gt;
7.5 &lt;a href=&#34;#link7.5&#34;&gt;E. Iteratively Running t-test Within Each Age Group&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link8&#34;&gt;Data Visualization&lt;/a&gt;&lt;br&gt;
8.1 &lt;a href=&#34;#link8.1&#34;&gt;Characterizing Textual Data Through Wordcloud&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#link9&#34;&gt;Conclusion&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-link1-what-is-google-cloud-api-a&#34;&gt;&lt;a name=&#34;link1&#34;&gt; What is Google Cloud API? &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Google Cloud Platform&lt;/strong&gt; is a suite of cloud computing services that lets developers interact with APIs that involve data storage, data analytics, and machine learning. In this notebook, I build on to the previous notebook to call in the spreadsheets from Google Drive, and run textual data analysis using the Cloud Natural Language API and vector space models.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cloud.google.com/natural-language&#34; target=&#34;_blank&#34;&gt;Natural Language AI&lt;/a&gt;&lt;/strong&gt; is an API available in Google Cloud. It uses machine learning to analyze texts through sentiment analysis and extract information about the text itself. It offers three types of models:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Auto ML&lt;/strong&gt;: that allows you to train your own model&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;mark&gt;Natural Language API&lt;/mark&gt;&lt;/strong&gt;: that offers pre-trained models to quickly boot up NLP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Healthcare Natural Language AI&lt;/strong&gt;: that is specific for medical texts.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For the sake of time scope and complexity of the project, let&amp;rsquo;s use the Natural Language API to call in a pre-trained model to analyze textual data. The demo of the model can be found online here: &lt;a href=&#34;https://cloud.google.com/natural-language&#34; target=&#34;_blank&#34;&gt;https://cloud.google.com/natural-language&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;a-name-link2-survey-data-in-user-research-a&#34;&gt;&lt;a name=&#34;link2&#34;&gt; Survey Data in User Research &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;As a UX researcher, survey studies are essential for understanding the users because they can be quickly developed and sent out to receive a good amount of sample in a short period of time. &lt;strong&gt;Surveys are powerful tools to be utilized for conducting preliminary research at the discovery stage to explore the general problem space and user behaviors.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the free and efficient tools is the Google Forms. While it can automatically generate pie graphs and bar graphs to summarize the survey results, the results are often too limited. &lt;strong&gt;As researchers, we might be interested in learning more in depth about the data. After all, it is researchers&amp;rsquo; role to develop a keen sense to analyze the data and drive insights.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For instance, the screenshots below show sample summaries of what Google Form summary is capable of doing.&lt;/p&gt;

&lt;h4 id=&#34;breakdown-of-participants-age-range&#34;&gt;Breakdown of participants&amp;rsquo; age range&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;./age.png&#34; alt=&#34;Age Breakdown&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;participants-self-perception-of-their-health-wellness&#34;&gt;Participants&amp;rsquo; self perception of their health wellness&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;./rating.png&#34; alt=&#34;Rating by Participants&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The graphs above do not show any relationship between the data.&lt;/strong&gt; To drive more meaningful insights, we would want to explore if there are any relationships between the data. For example, we would want to know how self perception of health wellness varies by different age groups. Do older people perceive themselves to be less healthy than young people do? While the ratings are subjective, the analysis itself can hint towards meaningful insights.&lt;/p&gt;

&lt;h4 id=&#34;objectives&#34;&gt;Objectives&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;I use GoogleSheets API to call in the data and analyze the survey results to visualize the relationship between data and test statistical significance. I also incorporate Natural Language API to analyze textual data collected from the survey, and visualize them through violin graphs and word cloud.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;br&#34;&gt;&lt;br&gt;&lt;/h2&gt;

&lt;h2 id=&#34;a-name-link3-natural-language-api-features-a&#34;&gt;&lt;a name=&#34;link3&#34;&gt; Natural Language API Features &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Before diving straight to working with data, let&amp;rsquo;s take a look at some of the features of NL API.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Imports the Google Cloud client library
import os
from google.cloud import language_v1

# set environment for credentials (need to be called with every start of instance)
# refer the reference tab for setting credentials
os.environ[&amp;quot;GOOGLE_APPLICATION_CREDENTIALS&amp;quot;] = &amp;quot;/Users/Jin/google-cloud-sdk/natural-language-api.json&amp;quot;

# Instantiates a client
client = language_v1.LanguageServiceClient()

# Available types: PLAIN_TEXT, HTML
type_ = language_v1.Document.Type.PLAIN_TEXT

encoding_type = language_v1.EncodingType.UTF8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For the scope of this project, let&amp;rsquo;s look at some specific methods that NL API offers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Entity analysis&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;2. Sentiment analysis&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;3. Entity Sentiment analysis&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-link3-1-1-entity-analysis-a&#34;&gt;&lt;a name=&#34;link3.1&#34;&gt; 1. Entity analysis &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;analyze_entities&lt;/code&gt;: inspects the given text for known entities (proper nouns such as public figures, landmarks, etc.), and returns information about those entities.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# grab a random text from wikipedia
text = u&amp;quot;The University of Washington is a public research university in Seattle, Washington.\
        Ana Mari Cauce is the president.&amp;quot;

document = {&amp;quot;content&amp;quot;: text, &amp;quot;type_&amp;quot;: type_}

response = client.analyze_entities(request = {&#39;document&#39;: document, &#39;encoding_type&#39;: encoding_type})

# Loop through entitites returned from the API
for entity in response.entities:
    print(u&amp;quot;Entity name: {}&amp;quot;.format(entity.name))

    # Get entity type, e.g. PERSON, LOCATION, ADDRESS, NUMBER, et al
    print(u&amp;quot;Entity type: {}&amp;quot;.format(language_v1.Entity.Type(entity.type_).name))

    # Get the salience score associated with the entity in the [0, 1.0] range
    print(u&amp;quot;Salience score: {}&amp;quot;.format(entity.salience) + &#39;\n&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Entity name: University of Washington
Entity type: ORGANIZATION
Salience score: 0.7374827265739441

Entity name: Ana Mari Cauce
Entity type: PERSON
Salience score: 0.11040862649679184

Entity name: Washington
Entity type: LOCATION
Salience score: 0.07763731479644775

Entity name: Seattle
Entity type: LOCATION
Salience score: 0.07447130978107452
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;a-name-link3-2-2-sentiment-analysis-a&#34;&gt;&lt;a name=&#34;link3.2&#34;&gt; 2. Sentiment analysis &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;analyze_sentiment&lt;/code&gt;: inspects the given text and identifies the prevailing emotional opinion within the text, especially to determine a writer&amp;rsquo;s attitude as positive, negative, or neutral.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def analyze_sentiment(text):
    &amp;quot;&amp;quot;&amp;quot;
    a simple function created to run sentiment analysis for a given text.

    Parameters
    ----------
    text : str
        string of text to be analyzed

    Returns
    -------
    sentiment.score: float
        sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).

    sentiment.magnitude: float
        a non-negative number in the [0, +inf) range, which represents the absolute \
        magnitude of sentiment regardless of score (positive or negative).
    &amp;quot;&amp;quot;&amp;quot;
    document = language_v1.Document(content=text, type_=language_v1.Document.Type.PLAIN_TEXT)

    # Detects the sentiment of the text
    sentiment = client.analyze_sentiment(request={&#39;document&#39;: document}).document_sentiment

    print(&amp;quot;Text: {}&amp;quot;.format(text))
    print(&amp;quot;Sentiment: {}, {}&amp;quot;.format(sentiment.score, sentiment.magnitude))

    return sentiment.score, sentiment.magnitude
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s try feeding in some random sentences and see how sentiments come out.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# The text to analyze
text = u&amp;quot;The dish was delightfully surprising.&amp;quot;
text2 = u&amp;quot;The overall experience was terrible.&amp;quot;

analyze_sentiment(text)
print(&#39;\n&#39;)
_, _ = analyze_sentiment(text2)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Text: The dish was delightfully surprising.
Sentiment: 0.8999999761581421, 0.8999999761581421


Text: The overall experience was terrible.
Sentiment: -0.800000011920929, 0.800000011920929
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;a-name-link3-3-3-entity-sentiment-analysis-a&#34;&gt;&lt;a name=&#34;link3.3&#34;&gt; 3. Entity sentiment analysis &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;analyze_entity_sentiment&lt;/code&gt;: combines both entity analysis and sentiment analysis and attempts to determine the sentiment (positive or negative) expressed about entities within the text.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def analyze_entity_sentiment(text):
    &amp;quot;&amp;quot;&amp;quot;
    a simple function to run entity sentiment analysis for a given text.

    Parameters
    ----------
    text : str
        string of text to be analyzed

    Returns
    -------
    entity.name: str
        name of the entity identified

    entity.type.name: str
        type of the entity identified

    sentiment.score: float
        sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).

    sentiment.magnitude: float
        a non-negative number in the [0, +inf) range, which represents the absolute \
        magnitude of sentiment regardless of score (positive or negative).
    &amp;quot;&amp;quot;&amp;quot;
    document = {&amp;quot;content&amp;quot;: text, &amp;quot;type_&amp;quot;: type_}

    encoding_type = language_v1.EncodingType.UTF8

    response = client.analyze_entity_sentiment(request = {&#39;document&#39;: document, &#39;encoding_type&#39;: encoding_type})
    # Loop through entitites returned from the API
    for entity in response.entities:
        print(u&amp;quot;Entity name: {}&amp;quot;.format(entity.name))

        # Get entity type, e.g. PERSON, LOCATION, ADDRESS, NUMBER, et al
        print(u&amp;quot;Entity type: {}&amp;quot;.format(language_v1.Entity.Type(entity.type_).name))

        # Get the salience score associated with the entity in the [0, 1.0] range
        print(u&amp;quot;Salience score: {}&amp;quot;.format(entity.salience))

        # Get the aggregate sentiment expressed for this entity in the provided document.
        sentiment = entity.sentiment
        print(u&amp;quot;Entity sentiment score: {}&amp;quot;.format(sentiment.score))
        print(u&amp;quot;Entity sentiment magnitude: {}&amp;quot;.format(sentiment.magnitude))
        print(&#39;\n&#39;)

    return entity.name, language_v1.Entity.Type(entity.type_).name, sentiment.score, sentiment.magnitude
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s try feeding in one neutral sentence, and a positive sentence.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;text = u&amp;quot;The University of Washington is a public research university in Seattle, Washington.\
        The HCDE Department offers amazing opportunities to study UX and HCI.&amp;quot;

_, _, _, _ = analyze_entity_sentiment(text)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Entity name: University of Washington
Entity type: ORGANIZATION
Salience score: 0.7403186559677124
Entity sentiment score: 0.0
Entity sentiment magnitude: 0.0


Entity name: Washington
Entity type: LOCATION
Salience score: 0.07140954583883286
Entity sentiment score: 0.0
Entity sentiment magnitude: 0.0


Entity name: Seattle
Entity type: LOCATION
Salience score: 0.06301160156726837
Entity sentiment score: 0.0
Entity sentiment magnitude: 0.0


Entity name: HCDE Department
Entity type: ORGANIZATION
Salience score: 0.04862694814801216
Entity sentiment score: 0.8999999761581421
Entity sentiment magnitude: 0.8999999761581421


Entity name: UX
Entity type: OTHER
Salience score: 0.03587672486901283
Entity sentiment score: 0.699999988079071
Entity sentiment magnitude: 0.699999988079071


Entity name: HCI
Entity type: OTHER
Salience score: 0.025248046964406967
Entity sentiment score: 0.800000011920929
Entity sentiment magnitude: 0.800000011920929


Entity name: opportunities
Entity type: OTHER
Salience score: 0.015508485026657581
Entity sentiment score: 0.8999999761581421
Entity sentiment magnitude: 0.8999999761581421
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From the result above, we can see that the first sentiment of the entities identified in the first sentence, such as &amp;lsquo;University of Washington&amp;rsquo; or &amp;lsquo;Seattle&amp;rsquo; has a sentiment score of 0.0 which means neutral. This makes sense because the sentence was directly pulled from Wikipedia. On the other hand, the second sentence I wrote highlights &amp;lsquo;HCDE Department&amp;rsquo; as an entity with positive sentiment score of 0.8999.&lt;/p&gt;

&lt;h4 id=&#34;so-what-s-next&#34;&gt;So what&amp;rsquo;s next?&lt;/h4&gt;

&lt;p&gt;We can interchangeably use the two functions defined &lt;code&gt;analyze_sentiment&lt;/code&gt; and &lt;code&gt;analyze_entity_sentiment&lt;/code&gt; to identify the overall sentiment of a given text or entity if specified in the data analysis process.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-link4-loading-in-data-using-google-sheets-api-a&#34;&gt;&lt;a name=&#34;link4&#34;&gt; Loading in data using Google Sheets API &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The following code will only run if you have your Google &lt;code&gt;credential.json&lt;/code&gt; and &lt;code&gt;token.json&lt;/code&gt; within the working directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from __future__ import print_function
import os.path
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials

SCOPES = [&#39;https://www.googleapis.com/auth/spreadsheets.readonly&#39;]
SPREADSHEET_ID = &#39;11Den6g5nuR4B2CCUML1KrA0bEZXRpPZ7t83Ieyi7NJ4&#39;

# Specify which sheet or row/column of data to call in
# refer to https://developers.google.com/sheets/api/guides/concepts#a1_notation for detail
RANGE_NAME = &#39;health_data&#39;

creds = Credentials.from_authorized_user_file(&#39;token.json&#39;, SCOPES)
service = build(&#39;sheets&#39;, &#39;v4&#39;, credentials=creds)

# Call the Sheets API to read in the data
sheet = service.spreadsheets()
result = sheet.values().get(spreadsheetId = SPREADSHEET_ID,
                            range = RANGE_NAME).execute()
values = result.get(&#39;values&#39;, [])

# convert the sheet to pandas dataframe so we can easily manipulate the data
import pandas as pd

data = pd.DataFrame(values[1:], columns=values[0])

# let&#39;s confirm
print(type(data))

data.shape
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;

(71, 27)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-link5-dataset-a&#34;&gt;&lt;a name=&#34;link5&#34;&gt; Dataset &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;From the code above, we translated the data into pandas dataframe. Using &lt;code&gt;data.shape&lt;/code&gt;, we know that there are total 27 questions collected from 71 participants. For simplicity, I remove any data that does not prefer to disclose gender. This brings the data size to 68. Due to the extensive length and branching logic within the survey, the data becomes more textual and qualitative for questions or columns in the back. I will primarily use selected columns that are of interest.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s have a quick glance at the dataset.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# for simplicity, let&#39;s constrain the gender option to only two
gender_options = [&#39;Man&#39;, &#39;Woman&#39;]
data = data[data[&#39;What is your gender?&#39;].isin(gender_options)]

print(&#39;There are total &#39; + str(len(data)) + &#39; participants.&#39;)
print(&#39;The survey consists of &#39; + str(data.shape[1]) + &#39; questions (columns in the dataframe).&#39;)

# convert the column string values to integers
data[&#39;How would you rate your health?&#39;] = data[&#39;How would you rate your health?&#39;].astype(int)

data.head(3)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;There are total 69 participants.
The survey consists of 27 questions (columns in the dataframe).
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Timestamp&lt;/th&gt;
      &lt;th&gt;What age range are you?&lt;/th&gt;
      &lt;th&gt;What is your gender?&lt;/th&gt;
      &lt;th&gt;What actions do you take regarding your health?&lt;/th&gt;
      &lt;th&gt;How would you rate your health?&lt;/th&gt;
      &lt;th&gt;Have you ever tracked your health and/or fitness?&lt;/th&gt;
      &lt;th&gt;Why do you not track your health and/or fitness?&lt;/th&gt;
      &lt;th&gt;How do you generally like to keep track of activities?&lt;/th&gt;
      &lt;th&gt;Which of the following did you keep track of? (Select all that apply.)&lt;/th&gt;
      &lt;th&gt;What did you use to record your health and/or fitness? (Select all that apply.)&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;Which of the following do you keep track of? (Select all that apply.)&lt;/th&gt;
      &lt;th&gt;What do you use to record your health and/or fitness? (Select all that apply.)&lt;/th&gt;
      &lt;th&gt;If you use any app or device, could you tell us which one(s)?&lt;/th&gt;
      &lt;th&gt;Why do you track your health and/or fitness?&lt;/th&gt;
      &lt;th&gt;Is there anything you like about your current health and/or fitness tracking method?&lt;/th&gt;
      &lt;th&gt;In the last 30 days, how often have you tracked your health and/or fitness?&lt;/th&gt;
      &lt;th&gt;Who views your health and/or fitness information?&lt;/th&gt;
      &lt;th&gt;How is your health and/or fitness information being used?&lt;/th&gt;
      &lt;th&gt;What, if anything, has been helpful about the information you tracked?&lt;/th&gt;
      &lt;th&gt;Is there anything that could be better about your current health and/or fitness tracking method?&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2020/07/18 9:59:33 AM EST&lt;/td&gt;
      &lt;td&gt;Under 18&lt;/td&gt;
      &lt;td&gt;Man&lt;/td&gt;
      &lt;td&gt;Exercise;Learn more about your health (e.g. fr...&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Yes and I am currently still tracking&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;Exercise (e.g. Steps taken, Distance, Calories...&lt;/td&gt;
      &lt;td&gt;Mobile App&lt;/td&gt;
      &lt;td&gt;Google fit and Pixels&lt;/td&gt;
      &lt;td&gt;It&#39;s interesting to look back at the data I ha...&lt;/td&gt;
      &lt;td&gt;My mood tracking method is very useful for dis...&lt;/td&gt;
      &lt;td&gt;Everyday&lt;/td&gt;
      &lt;td&gt;Myself&lt;/td&gt;
      &lt;td&gt;It&#39;s only used by me. It simply interests me.&lt;/td&gt;
      &lt;td&gt;I have concluded that I am prone to mood swing...&lt;/td&gt;
      &lt;td&gt;It could be more extensive.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2020/07/18 10:15:07 AM EST&lt;/td&gt;
      &lt;td&gt;25 - 34&lt;/td&gt;
      &lt;td&gt;Man&lt;/td&gt;
      &lt;td&gt;Exercise&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Yes, I have tracked before but not in the last...&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;Cardiovascular (e.g. Heart rate, Blood pressur...&lt;/td&gt;
      &lt;td&gt;Wearable;Mobile App&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2020/07/18 10:32:24 AM EST&lt;/td&gt;
      &lt;td&gt;18 - 24&lt;/td&gt;
      &lt;td&gt;Man&lt;/td&gt;
      &lt;td&gt;None of the above&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;I eat very little junk food, and am very thin....&lt;/td&gt;
      &lt;td&gt;To do lists and notes&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;3 rows × 27 columns&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-link6-data-analysis-a&#34;&gt;&lt;a name=&#34;link6&#34;&gt; Data Analysis &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Now that we have seen the general dataframe structure, let&amp;rsquo;s explore probing the data for analysis.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os
import pandas as pd
from collections import Counter
import re
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from nltk.corpus import stopwords
import warnings
from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator
import scipy
from tabulate import tabulate

warnings.simplefilter(action=&#39;ignore&#39;, category=FutureWarning)  # suppress any warning
sns.set_color_codes(&#39;pastel&#39;)  # set color
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;querying-data&#34;&gt;Querying data&lt;/h3&gt;

&lt;p&gt;Before we play around with data, let&amp;rsquo;s query out the data that are of interest. This way we can manipulate the data more effectively without having to call on the entire dataset &lt;code&gt;data&lt;/code&gt; everytime.&lt;/p&gt;

&lt;p&gt;There are total 7 different age groups.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# let&#39;s divde the data by gender first
females = data.loc[data[&#39;What is your gender?&#39;] == &#39;Woman&#39;]
males = data.loc[data[&#39;What is your gender?&#39;] == &#39;Man&#39;]

# let&#39;s also create dataset divided by age group
age_under18 = data.loc[data[&#39;What age range are you?&#39;] == &#39;Under 18&#39;]
age_18to24 = data.loc[data[&#39;What age range are you?&#39;] == &#39;18 - 24&#39;]
age_25to34 = data.loc[data[&#39;What age range are you?&#39;] == &#39;25 - 34&#39;]
age_35to44 = data.loc[data[&#39;What age range are you?&#39;] == &#39;35 - 44&#39;]
age_45to54 = data.loc[data[&#39;What age range are you?&#39;] == &#39;45 - 54&#39;]
age_55to64 = data.loc[data[&#39;What age range are you?&#39;] == &#39;55 - 64&#39;]
age_over65 = data.loc[data[&#39;What age range are you?&#39;] == &#39;65 or older&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(len(males))
print(len(females))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;31
38
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-link7-research-question-a&#34;&gt;&lt;a name=&#34;link7&#34;&gt; Research Question &lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;mark&gt;&lt;em&gt;How does self-perception of health rating differ by gender and age?&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Participants were asked, How would you rate your health? (5 being healthy, 1 being not healthy).&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-link7-1-a-health-rating-by-gender-a&#34;&gt;&lt;a name=&#34;link7.1&#34;&gt; A. Health rating by gender &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s breakdown the data to see how self-perception of health wellness varies by gender and different age groups. In the code below, I first quary females and males from the data.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# columns[4] is the column for health rating
mean_males = np.mean(males[males.columns[4]])
mean_females = np.mean(females[females.columns[4]])

print(&amp;quot;Mean of males&#39; self-health wellness: &amp;quot; + str(mean_males))
print(&amp;quot;Mean of females&#39; self-health wellness: &amp;quot; + str(mean_females))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Mean of males&#39; self-health wellness: 3.5161290322580645
Mean of females&#39; self-health wellness: 3.4473684210526314
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-link7-2-b-health-rating-by-age-group-a&#34;&gt;&lt;a name=&#34;link7.2&#34;&gt; B. Health rating by age group &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Now let&amp;rsquo;s breakdown the data to see how self-perception of health wellness varies by different age groups.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;age = data.groupby(&#39;What age range are you?&#39;)[&#39;How would you rate your health?&#39;].mean()
age
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;What age range are you?
18 - 24        3.615385
25 - 34        3.285714
35 - 44        3.500000
45 - 54        3.375000
55 - 64        3.600000
65 or older    4.000000
Under 18       3.000000
Name: How would you rate your health?, dtype: float64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Conversely, the age group 65 or older actually has the highest self-perception of wellness.&lt;/strong&gt; The youngest group (age under 18) rated the lowest.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-link7-3-c-t-test-for-statistical-signifcance-a&#34;&gt;&lt;a name=&#34;link7.3&#34;&gt; C. T-test for statistical signifcance &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;With small samples of the two demographic groups &lt;code&gt;65 or older&lt;/code&gt; and &lt;code&gt;Under 18&lt;/code&gt;, we are not sure if the difference we see here is significant. &lt;strong&gt;Let&amp;rsquo;s run a quick t-test to see if the difference we are seeing is statistically significant.&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;t, p = scipy.stats.ttest_ind(age_over65[&#39;How would you rate your health?&#39;], age_under18[&#39;How would you rate your health?&#39;])

print(&#39;t: &#39; + str(t.round(4)))  
print(&#39;p: &#39; + str(p.round(4)))  # the p-val should be less than 0.05 in general to assume the difference we observe is signifcant
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;t: 2.8983
p: 0.0199
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We see the p-value is 0.01 which is signifcant, which is one interesting find! So we can say that within this dataset, the people age over 65 perceive themselves to be more healthy than teenagers would do.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-link7-4-d-health-rating-by-age-gender-group-a&#34;&gt;&lt;a name=&#34;link7.4&#34;&gt; D. Health rating by age &amp;amp; gender group &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Now let&amp;rsquo;s breakdown by both gender and different age groups to look at how the self perception of health wellness change.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;age_gender = data.groupby([&#39;What age range are you?&#39;, &#39;What is your gender?&#39;])[&#39;How would you rate your health?&#39;].mean().round(2)

age_gender
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;What age range are you?  What is your gender?
18 - 24                  Man                     3.43
                         Woman                   3.83
25 - 34                  Man                     3.43
                         Woman                   3.21
35 - 44                  Man                     3.80
                         Woman                   3.29
45 - 54                  Man                     3.40
                         Woman                   3.33
55 - 64                  Man                     3.33
                         Woman                   4.00
65 or older              Man                     4.00
                         Woman                   4.00
Under 18                 Man                     3.00
                         Woman                   3.00
Name: How would you rate your health?, dtype: float64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-link7-5-e-iteratively-running-t-test-within-each-age-group-a&#34;&gt;&lt;a name=&#34;link7.5&#34;&gt; E. Iteratively running t-test within each age group &lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;We have several different age groups with each male and female gender group. Within each age group, let&amp;rsquo;s run a t-test to see if there are any significant observed differences.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;gender_options = [&#39;Man&#39;, &#39;Woman&#39;]
age_groups = [&#39;age_under18&#39;, &#39;age_18to24&#39;, &#39;age_25to34&#39;, &#39;age_35to44&#39;, &#39;age_45to54&#39;, &#39;age_55to64&#39;, &#39;age_over65&#39;]

table = []
table.append([&#39;age group&#39;, &#39;t value&#39;, &#39;p value&#39;])

# iteratively run for t-tests within each age group defined in the list variable &#39;age_groups&#39;
for i in range(0, len(age_groups)):
    data_string = &amp;quot;[&#39;How would you rate your health?&#39;]&amp;quot;
    eval_string1 = age_groups[i] + &#39;.loc[&#39; + age_groups[i] + &amp;quot;[&#39;What is your gender?&#39;] == &#39;Man&#39;]&amp;quot;
    a = eval(eval_string1 + data_string)
    eval_string2 = age_groups[i] + &#39;.loc[&#39; + age_groups[i] + &amp;quot;[&#39;What is your gender?&#39;] == &#39;Woman&#39;]&amp;quot;
    b = eval(eval_string2 + data_string)
#     strings_combined = &#39;scipy.stats.ttest_ind(a, b)&#39;

    t, p = eval(&#39;scipy.stats.ttest_ind(a, b)&#39;)

    # we use a package called tabulate to print out a formatted table
    table.append([age_groups[i], t.round(4) ,p.round(4)])

print(tabulate(table, headers=&#39;firstrow&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;age group      t value    p value
-----------  ---------  ---------
age_under18   nan        nan
age_18to24     -1.1315     0.2819
age_25to34      0.4504     0.6575
age_35to44      0.9682     0.3558
age_45to54      0.1637     0.8754
age_55to64     -0.7746     0.495
age_over65      0          1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;We see that the p-values are all above 0.05 which means that there are no observed significant differences in gender within each age group.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-link8-data-visualization-a&#34;&gt;&lt;a name=&#34;link8&#34;&gt; Data Visualization &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s first try plotting a simple visual violin plot.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;age_plot = sns.catplot(x=&#39;What age range are you?&#39;, y=&#39;How would you rate your health?&#39;, \
                       hue=&#39;What is your gender?&#39;, kind=&amp;quot;violin&amp;quot;, data=data);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./TextualDataAnalysis_39_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-link8-1-characterizing-textual-data-through-wordcloud-a&#34;&gt;&lt;a name=&#34;link8.1&#34;&gt; Characterizing textual data through wordcloud &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s change focus and try analyzing textual inputs from the participants. We will analyze the column How is your health and/or fitness information being used? question to identify any emerging keywords using the word cloud representation. Disclaimer: The result here is not such a useful or accurate representation as the stopwords did not clearly filter out.&lt;/p&gt;

&lt;p&gt;We first call in a list of stopwords to filter out any unnecessary words, such as &amp;lsquo;I&amp;rsquo;, &amp;lsquo;and&amp;rsquo;, and etc. We then flatten out all the responses into a single list of words.&lt;/p&gt;

&lt;h3 id=&#34;is-there-gender-difference-in-how-they-use-health-data-text-responses&#34;&gt;Is there gender difference in how they use health data (text responses)?&lt;/h3&gt;

&lt;p&gt;Participants were asked, &amp;ldquo;How is your health and/or fitness information being used?&amp;rdquo; Here, I try to breakdown the text data through representation of wordcloud, and see if there any characteristics found in each gender.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# builtin stopword sets from nltk
stop = set(stopwords.words(&#39;english&#39;))


def plot_wordcloud(df, col, separator=None):
    &amp;quot;&amp;quot;&amp;quot;
    Plots a wordcloud of given dataframe and specific column. The text is counted at word level.

    Parameters
    ----------
    df: pandas dataframe
        dataframe that contains textual data
    col: int
        integer that points to the specific column with textual data
    separator: str (default: None)
        string specified to breakdown the text by. Default is empty space

    Returns
    -------
    Wordcloud plot

    list of most common words in the dataframe

    &amp;quot;&amp;quot;&amp;quot;
    # filter out any NaNs
    response = [x for x in df[df.columns[col]] if x == x]
    # filter out any None
    response = [x for x in response if x != None]

    word_dict = []
    for i in range(0, len(response)):
        if separator == None:
            word_dict.append(response[i].split())
        else:
            word_dict.append(response[i].split(separator))
    word_filtered = []

    # flatten the list and lower all letter cases
    for sublist in word_dict:
        for item in sublist:
            word_filtered.append(item.lower())

    # remove stopwords
    word_filtered = [x for x in word_filtered if x not in stop]

    word_filtered = [word.replace(&#39;.&#39;,&#39;&#39;).replace(&#39;,&#39;, &#39;&#39;).replace(&amp;quot;&#39;&amp;quot;,&#39;&#39;) for word in word_filtered]

    # print most common words
    most_common_words = Counter(word_filtered).most_common(10)
    print(most_common_words)

    # plot wordcloud
    texts = &amp;quot; &amp;quot;.join(word for word in word_filtered)
    cloud = WordCloud(max_font_size=50, max_words=100, background_color=&amp;quot;white&amp;quot;).generate(texts)
    plt.imshow(cloud, interpolation=&#39;bilinear&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# plot wordcloud for Man
plot_wordcloud(males, 24)  # 24 specifies the column number
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[(&#39;me&#39;, 2), (&#39;adjust&#39;, 2), (&#39;overall&#39;, 2), (&#39;personal&#39;, 2), (&#39;im&#39;, 2), (&#39;its&#39;, 1), (&#39;used&#39;, 1), (&#39;simply&#39;, 1), (&#39;interests&#39;, 1), (&#39;food&#39;, 1)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./TextualDataAnalysis_42_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# plot wordcloud for Woman
plot_wordcloud(females, 24)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[(&#39;use&#39;, 4), (&#39;see&#39;, 4), (&#39;im&#39;, 4), (&#39;bit&#39;, 3), (&#39;more&#39;, 3), (&#39;less&#39;, 3), (&#39;food&#39;, 3), (&#39;know&#39;, 3), (&#39;sleep&#39;, 2), (&#39;information&#39;, 2)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./TextualDataAnalysis_43_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The top image is the wordcloud of male participants and the bottom is that of female participants. We see that some words are not as meaningful and that one critical fault to this approach is that breaking down the responses into word level can misrepresent the meaning of their responses. For example, &amp;lsquo;exercise&amp;rsquo; and &amp;lsquo;not exercise&amp;rsquo; have two opposing ideas but here, it would count &amp;lsquo;not&amp;rsquo; and &amp;lsquo;exercise&amp;rsquo; as two seperate ideas.&lt;/p&gt;

&lt;p&gt;Even though the word counts are small, we see more &amp;lsquo;food&amp;rsquo; and &amp;lsquo;sleep&amp;rsquo; for female participants, leading to an assumption that it could be related to going on diets.&lt;/p&gt;

&lt;h3 id=&#34;analyzing-categorical-data-using-wordcloud&#34;&gt;Analyzing categorical data using wordcloud&lt;/h3&gt;

&lt;p&gt;Participants were also asked, &amp;ldquo;what actions do you take regarding your health?&amp;rdquo; with multiple choices answer selections that include&amp;hellip;
1. &amp;lsquo;exercise&amp;rsquo;
2. &amp;lsquo;take medication or health supplements&amp;rsquo;
3. &amp;lsquo;track health or fitness&amp;rsquo;
4. &amp;lsquo;learn more about health&amp;rsquo;
5. &amp;lsquo;receive regular treatment at clinic&amp;rsquo;
6. &amp;lsquo;maintain a diet&amp;rsquo;
7. &amp;lsquo;receive mental counseling.&amp;rsquo;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plot_wordcloud(males, 3, &#39;;&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[(&#39;exercise&#39;, 29), (&#39;take medication and/or health supplements&#39;, 10), (&#39;track your health and/or fitness&#39;, 9), (&#39;learn more about your health (eg from online friends or community)&#39;, 8), (&#39;maintain a diet&#39;, 8), (&#39;receive regular treatment and/or consultation at clinic&#39;, 3), (&#39;none of the above&#39;, 2)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./TextualDataAnalysis_46_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plot_wordcloud(females, 3, &#39;;&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[(&#39;exercise&#39;, 30), (&#39;take medication and/or health supplements&#39;, 27), (&#39;track your health and/or fitness&#39;, 24), (&#39;learn more about your health (eg from online friends or community)&#39;, 17), (&#39;receive regular treatment and/or consultation at clinic&#39;, 17), (&#39;maintain a diet&#39;, 16), (&#39;receive mental counseling&#39;, 7)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./TextualDataAnalysis_47_1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;From the two results above, we see that exercise is the most common practice for keeping up health in both genders. However, we see that in general, women tend to do more activities or attempts to maintain their health e.g. by more frequently visiting a clinic or receive counseling, whereas two men responded they simply do nothing at all.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-link9-conclusion-thoughts-a&#34;&gt;&lt;a name=&#34;link9&#34;&gt; Conclusion &amp;amp; Thoughts &lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Wordcloud is a fun, engaging representation of textual data. However, more caution and consideration are needed because it can also tweak how the data is represented. For example, I coded the function so that it would breakdown any sentences or phrases into word level. This means that if someone does &amp;lsquo;not exercise&amp;rsquo;, it would still count &amp;lsquo;exercise&amp;rsquo; and the end result would show &amp;lsquo;exercise&amp;rsquo; being emphasized more. While the context of exercise is present, the meaning is totally the opposite.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;GoogleSheets API v4: &lt;a href=&#34;https://developers.google.com/sheets/api/samples/reading&#34; target=&#34;_blank&#34;&gt;https://developers.google.com/sheets/api/samples/reading&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google Oauth: &lt;a href=&#34;https://developers.google.com/identity/protocols/oauth2/service-account#python&#34; target=&#34;_blank&#34;&gt;https://developers.google.com/identity/protocols/oauth2/service-account#python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Google API Python Client: &lt;a href=&#34;https://github.com/googleapis/google-api-python-client/blob/master/docs/oauth.md&#34; target=&#34;_blank&#34;&gt;https://github.com/googleapis/google-api-python-client/blob/master/docs/oauth.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credentials: &lt;a href=&#34;https://developers.google.com/workspace/guides/create-credentials&#34; target=&#34;_blank&#34;&gt;https://developers.google.com/workspace/guides/create-credentials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>End-to-end design process of improving the health tracker (NDA)</title>
      <link>https://jinjeon.me/project/navigating-cancer/</link>
      <pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://jinjeon.me/project/navigating-cancer/</guid>
      <description>

&lt;style&gt;
.introduction {
  column-count: 2;
}
&lt;/style&gt;

&lt;p&gt;&lt;body style=&#34;font-family:Arial; font-size: 12pt&#34;&gt;
&lt;div class=&#34;introduction&#34;&gt;
&lt;b&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; My Role: &lt;/h&gt;&lt;/b&gt;
&lt;br&gt;&lt;small&gt;UX researcher in a 4-person team of researchers and designers&lt;/small&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; Methods: &lt;/h&gt;&lt;/b&gt;
&lt;br&gt;&lt;small&gt;survey, interview, affinity diagram, prototyping, heuristic evaluation, usability testing&lt;/small&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; Timeline: &lt;/h&gt;&lt;/b&gt;
&lt;br&gt;&lt;small&gt;Jul 2020 - Sep 2020 (~3 months)&lt;/small&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; Stakeholders: &lt;/h&gt;&lt;/b&gt;
&lt;br&gt;&lt;small&gt;product manager, senior designer, clinicians, patients&lt;/small&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;h-style-font-family-georgia-overview-h&#34;&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; Overview &lt;/h&gt;&lt;/h2&gt;

&lt;p&gt;To improve patients&amp;rsquo; experiences with symptom management and engagement with the health tracker, the team conducted &lt;strong&gt;user research to identify user needs&lt;/strong&gt;, &lt;strong&gt;concept-tested prototypes&lt;/strong&gt;, and &lt;strong&gt;delivered a high-fidelity prototype&lt;/strong&gt; to the leaders and multiple stakeholders.&lt;/p&gt;

&lt;p&gt;With COVID-19, the team was working remotely as an international, cross-functional team with each of us in different time zones. I was also flying around being in the US and my hometown Korea, making the project more dynamic.&lt;/p&gt;

&lt;h2 id=&#34;h-style-font-family-georgia-impact-h&#34;&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; Impact &lt;/h&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Delivered research findings and 4 major feature recommendations&lt;/strong&gt; to leaders and multiple stakeholders, including CEO, product team, and designers.&lt;/li&gt;
&lt;li&gt;Evangelized the impact of research through adaptation of design framework throughout the research process.&lt;/li&gt;
&lt;li&gt;Received &lt;strong&gt;strong positive feedbacks&lt;/strong&gt; from the stakeholders, and recommendations aligned with company&amp;rsquo;s future milestones.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;h-style-font-family-georgia-research-question-h&#34;&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; Research Question &lt;/h&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;p style=&#34;font-size: 16pt&#34;&gt;&lt;mark&gt;&lt;em&gt;&amp;ldquo;How might we increase patient engagement with health tracker?&amp;rdquo;&lt;/em&gt;&lt;/mark&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;h-style-font-family-georgia-the-design-process-h&#34;&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; The Design Process &lt;/h&gt;&lt;/h2&gt;

&lt;h3 id=&#34;unfolding-the-research-through-design-framework&#34;&gt;Unfolding the Research through Design Framework&lt;/h3&gt;

&lt;p&gt;Part of our team&amp;rsquo;s mission was to &lt;strong&gt;evangelize the impact of research&lt;/strong&gt; as the company lacked a dedicated research team. We incorporated the &lt;a href=&#34;https://www.designcouncil.org.uk/news-opinion/what-framework-innovation-design-councils-evolved-double-diamond&#34; target=&#34;_blank&#34;&gt;Double Diamond&lt;/a&gt; design framework to help us guide our research focus by better framing the problem and solving the users&amp;rsquo; underlying needs.&lt;/p&gt;

&lt;p&gt;&lt;mark&gt;This case study will unfold along with the different stages of the Double Diamond.&lt;/mark&gt;&lt;/p&gt;

&lt;h3 id=&#34;the-ideal-double-diamond&#34;&gt;The Ideal Double Diamond&lt;/h3&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;doublediamond.png&#34; data-caption=&#34;The ideal double diamond. Design frameworks help organize the design thinking process by helping researchers better frame the problem and focus on identifying and solving the users’ underlying needs.The model, divided into 4 phases (discover, define, develop, and deliver), maps the divergent and convergent stages of the design process.&#34;&gt;
&lt;img src=&#34;doublediamond.png&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;b&gt;The ideal double diamond. Design frameworks help organize the design thinking process by helping researchers better frame the problem and focus on identifying and solving the users’ underlying needs.&lt;br&gt;The model, divided into 4 phases (discover, define, develop, and deliver), maps the divergent and convergent stages of the design process.&lt;/b&gt;
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;h4 id=&#34;but-the-reality&#34;&gt;but the Reality&amp;hellip;&lt;/h4&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;reality.png&#34; data-caption=&#34;The deformed double diamond. While the ideal model is a perfectly-shaped two diamonds, the reality of our research journey was a deformed diamond process. We made multiple pivots along the research, which ended up being a valuable process as we gained greater insights to the problem space.&#34;&gt;
&lt;img src=&#34;reality.png&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;b&gt;The deformed double diamond. While the ideal model is a perfectly-shaped two diamonds, the reality of our research journey was a deformed diamond process. We made multiple pivots along the research, which ended up being a valuable process as we gained greater insights to the problem space.&lt;/b&gt;
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;hr /&gt;

&lt;h2 id=&#34;h-style-font-family-georgia-user-research-h&#34;&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; User Research &lt;/h&gt;&lt;/h2&gt;

&lt;p&gt;Please note that below are &lt;strong&gt;&lt;em&gt;summarized insights&lt;/em&gt;&lt;/strong&gt; our team had during the user research process.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;user_research.png&#34; data-caption=&#34;Click to see in large view  Overall high-level research process. We began our research with a general survey. From the insights from the general survey and existing survey results from the company, we conducted interviews with cancer patients and survivors.&#34;&gt;
&lt;img src=&#34;user_research.png&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;strong&gt;Click to see in large view&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;Overall high-level research process.&lt;/strong&gt; We began our research with a general survey. From the insights from the general survey and existing survey results from the company, we conducted interviews with cancer patients and survivors.
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;hr /&gt;

&lt;h3 id=&#34;mark-1-discover-mark&#34;&gt;&lt;mark&gt; 1. Discover&lt;/mark&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We initiated our research with a general survey sent out online (n=72) to understand the general space of health care and health trackers. It helped us &lt;strong&gt;identify people&amp;rsquo;s health goals and tracking habits.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;From the general survey results, we devised a remote moderated &lt;strong&gt;interview plan to better understand what it feels like to undergo cancer treatments and how they manage their symptoms.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;From the interview with cancer patients and survivors, &lt;strong&gt;affinity mapping helped us categorize their responses&lt;/strong&gt; into various sections, such as their emotions throughout the oncology journey, how they track and manage their symptoms, interaction with the care team and caregivers, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;key-insights&#34;&gt;Key Insights&lt;/h4&gt;

&lt;p&gt;Interview with the patients and survivors shed light to clearly understand not just how they manage their symptoms, but &lt;strong&gt;empathize with their adjusted lifestyles and daily challenges.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Through quantitative analysis of the self-reported metrics, I identified that &amp;ldquo;older people&amp;rsquo;s self perception of health level is higher than that of younger people&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Cancer oncology treatments were perceived as &lt;strong&gt;long &amp;ldquo;journeys&amp;rdquo;&lt;/strong&gt; even sometimes with no end.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Symptom management varies by each individual, severity, and cancer types.&lt;/strong&gt; As a researcher and designer, another design challenge was how we can deliver a solution that addresses all cancer types and patients.&lt;/li&gt;
&lt;/ul&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;discover.svg&#34; data-caption=&#34;Click to see large view. &#34;&gt;
&lt;img src=&#34;discover.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;b&gt;Click to see large view. &lt;/b&gt;
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;hr /&gt;

&lt;h3 id=&#34;mark-2-define-mark&#34;&gt;&lt;mark&gt; 2. Define&lt;/mark&gt;&lt;/h3&gt;

&lt;p&gt;Below are only partial insights synthesized.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;Key Insight:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Identifying the user needs and listing out the stories in a prioritized order immensely helped the team properly guide to the next steps.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;We synthesized potential features that would address the user needs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;define.svg&#34; data-caption=&#34;User Stories. These are partial high-level user stories synthesized from the research. &#34;&gt;
&lt;img src=&#34;define.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;b&gt;User Stories. These are partial high-level user stories synthesized from the research. &lt;/b&gt;
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;hr /&gt;

&lt;h3 id=&#34;mark-3-develop-mark&#34;&gt;&lt;mark&gt; 3. Develop &lt;/mark&gt;&lt;/h3&gt;

&lt;p&gt;💡 &lt;strong&gt;Key Insights:&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With my background in data visualization, &lt;strong&gt;I was particularly fascinated in developing visual dashboards and data visualization to help patients track their symptoms.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;One key lesson I learned was: &lt;mark&gt;&lt;strong&gt;Designing should always consider the target audience first.&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Excited to develop data visualization screens, &lt;strong&gt;I initially thought that the more diverse, interactive, and comprehensive graphs are, the better.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Nevertheless, during the expert evaluation and concept-testing, I realized that the screens were simply too busy and users (particularly the old population that are less tech savvy) find the &lt;strong&gt;visuals to be too complicated and less informative.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;develop.svg&#34; data-caption=&#34;Click to see in large view.  Developing prototypes. We began our development with quick sketches using Google&amp;rsquo;s Crazy 8&amp;rsquo;s methodology. We used Figma to develop into a high-fidelity prototypes, which were later concept-tested in the deliver phase &#34;&gt;
&lt;img src=&#34;develop.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;b&gt;Click to see in large view. &lt;br&gt; Developing prototypes. We began our development with quick sketches using Google&amp;rsquo;s Crazy 8&amp;rsquo;s methodology. We used Figma to develop into a high-fidelity prototypes, which were later concept-tested in the deliver phase &lt;/b&gt;
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;h4 id=&#34;3-1-concept-testing&#34;&gt;3.1. Concept-testing&lt;/h4&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;concept_test.svg&#34; data-caption=&#34;We conducted concept-testing with 8 users, and organized by each participant. We then categorized by themes and features. &#34;&gt;
&lt;img src=&#34;concept_test.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;b&gt;We conducted concept-testing with 8 users, and organized by each participant. We then categorized by themes and features. &lt;/b&gt;
  &lt;/figcaption&gt;


&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;concept_test2.svg&#34; data-caption=&#34;Concept-testing helped us narrow down our scope, and focus on key 3 areas, and specifically 4 feature design recommendations. &#34;&gt;
&lt;img src=&#34;concept_test2.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    &lt;b&gt;Concept-testing helped us narrow down our scope, and focus on key 3 areas, and specifically 4 feature design recommendations. &lt;/b&gt;
  &lt;/figcaption&gt;


&lt;/figure&gt;


&lt;hr /&gt;

&lt;h3 id=&#34;mark-4-deliver-mark-design-recommendations&#34;&gt;&lt;mark&gt; 4. Deliver&lt;/mark&gt; (Design Recommendations)&lt;/h3&gt;

&lt;p&gt;** &lt;strong&gt;Disclaimer: Below displays only 2 of the total 4 final design recommendations&lt;/strong&gt; **&lt;/p&gt;

&lt;p&gt;In order to ensure that our design solutions stem to delivering the actual user needs, we explicitly stated the user needs that are being met with each design recommendation.&lt;/p&gt;

&lt;h4 id=&#34;4-1-dashboard-and-data-visualization&#34;&gt;** 4.1. Dashboard and Data Visualization**&lt;/h4&gt;

&lt;p&gt;Personalized dashboard provides a way to effectively track users&amp;rsquo; past symptoms and even compare and predict how they would feel in the next few days.













&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;feature-1.svg&#34; &gt;
&lt;img src=&#34;feature-1.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;
&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;feature-1.1.svg&#34; &gt;
&lt;img src=&#34;feature-1.1.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;feature-1.2.svg&#34; &gt;
&lt;img src=&#34;feature-1.2.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;h4 id=&#34;4-2-journal&#34;&gt;** 4.2. Journal**&lt;/h4&gt;

&lt;p&gt;Journal feature lets users record their symptoms through various means. &lt;strong&gt;Considering accessibility and finger &amp;ldquo;tickling&amp;rdquo; &amp;amp; &amp;ldquo;numbness&amp;rdquo; being a common symptom of cancer, we include voice memo, photo upload, and emotion scale&lt;/strong&gt; to faciliate their input.&lt;/p&gt;














&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;feature-2.svg&#34; &gt;
&lt;img src=&#34;feature-2.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;feature-2.1.svg&#34; &gt;
&lt;img src=&#34;feature-2.1.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;















&lt;figure&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;feature-2.2.svg&#34; &gt;
&lt;img src=&#34;feature-2.2.svg&#34; alt=&#34;&#34; width=&#34;full&#34; &gt;&lt;/a&gt;



&lt;/figure&gt;


&lt;p&gt;To learn more about this project, please reach out to me!&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;h-style-font-family-georgia-reflections-h&#34;&gt;&lt;h style=&#34;font-family:georgia&#34;&gt; Reflections &lt;/h&gt;&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Interviewing cancer patients could be overwhelming at first. I thought I needed to know all the terminologies, the process that patients go through, treatment cycles, and so on. &lt;strong&gt;Acknowledging that I am &amp;ldquo;learning&amp;rdquo; from them at the beginning of user sessions&lt;/strong&gt; not only helped lighten the atmosphere but also gave patients more confidence to share their stories.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Always think who the users are&lt;/strong&gt;: When I was ideating and designing features for dashboard and data visualization, my initial thought was having comprehensive data and being able to interactively manipulate the data was the best way to go. However, it turned out that I was not thinking about the patients who would be the actual users for the new features.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Statistical Analysis &amp; Data Visualization</title>
      <link>https://jinjeon.me/project/data-viz/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      <guid>https://jinjeon.me/project/data-viz/</guid>
      <description>&lt;p&gt;&lt;body style=&#34;font-family:Arial; font-size: 12pt&#34;&gt;&lt;/p&gt;

&lt;p&gt;See related work:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://jinjeon.me/post/textual-data-analysis&#34;&gt;Sentiment Analysis, Textual Data Analysis, and Visualization Using Natural Language API &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://jinjeon.me/post/quant-ux&#34;&gt;Statistical Data Analysis in Cross Cultural Research &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Interactive Art: Image Reconstruction using Perlin Noise (p5.js Javascript)
&lt;/div&gt;&lt;iframe src=&#34;https://editor.p5js.org/jeon11/embed/w2Ugnl4dR&#34; width=&#34;760&#34; height=&#34;600&#34;&gt;Image Reconstruction using Perlin Noise (Javascript- p5.js) &lt;/iframe&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The image above uses Perlin Noise to reconstruct old classic artworks, which is useful for generating patterns. Starting from a blank screen, it creates thousands of random noises that start recovering the image. They do so by reading the color of the image coordinates. The noises diffuse by generating random polygons spreading around, filling in the gap.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Refresh the page to see different image creations (total 4 images).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Drag the mouse to draw circles on top of the noises.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br&gt;
&lt;/body&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
